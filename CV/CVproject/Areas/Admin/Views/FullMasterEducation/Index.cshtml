@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@


@model CVproject.ViewModels.MasterFullEducationViewModel
@{
    ViewData["Title"] = "Full Action";
}


<div class="row">
    <div class="col-12">
        <form id="saneForm" asp-action="Save" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="control-label" value="0" readonly />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Major" class="control-label"></label>
                <input asp-for="Major" class="form-control" />
                <span asp-validation-for="Major" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Place" class="control-label"></label>
                <input asp-for="Place" class="form-control" />
                <span asp-validation-for="Place" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class=" endDatebtn form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input asp-for="EndDate" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>

           @*  <div class="form-group">
                <label asp-for="IsExperience" class="control-label"></label>
                <input asp-for="IsExperience" class="form-control" />
                <span asp-validation-for="IsExperience" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IsCurrent" class="control-label"></label>
                <input asp-for="IsCurrent" class="form-control" />
                <span asp-validation-for="IsCurrent" class="text-danger"></span>
            </div> *@

            <div class="form-group form-check">
                <label asp-for="IsExperience" class="form-check-label"></label>
                <input class="form-check-input" asp-for="IsExperience" /> 
                <span asp-validation-for="IsExperience" class="text-danger"></span>
                
            </div>
            <div class=" currentBtn form-group form-check">
                <label asp-for="IsCurrent" class="form-check-label"></label>
                <input asp-for="IsCurrent" class="form-check-input"  />
                <span class="text-danger" asp-validation-for="IsCurrent"></span>
                
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <input type="button" value="Clear" class="btn btn-dark" onclick="ClearForm()" />
            </div>
        </form>
    </div>
</div>




<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Major)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Place)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsExperience)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsCurrent)
            </th>           
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.MasterEducationViewModelss)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Major)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Place)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsExperience)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsCurrent)
                </td>


                <td>
                    

                    @* fillBtn *@
                    <a href="#" class=" fillBtn btn btn-warning icon-btn b-r-22"
                       data-id="@item.Id"
                       data-major="@item.Major"
                       data-description="@item.Description"
                       data-place="@item.Place"
                       data-startdate="@item.StartDate"
                       data-enddate="@item.EndDate"
                       data-isexperience="@item.IsExperience"
                       data-iscurrent="@item.IsCurrent">Edit2</a> |

                    @* Delete *@
                    <form asp-action="Delete" id="DeleteForm-@item.Id" class="d-inline">
                        <input type="hidden" asp-for="Id" value="@item.Id " />
                        <input type="button" value="Delete" class="btn btn-danger icon-btn b-r-22" onclick="ConfirmDelete('@item.Id')" />
                    </form>

                    @* Change Status *@
                    @if (item.IsActivate)
                    {
                        <form asp-action="ChangeStatus" id="ChangeForm-@item.Id" class="d-inline">
                            <input type="hidden" asp-for="Id" value="@item.Id " />
                            <input type="button" value="Deavtivate" class="btn btn-danger icon-btn b-r-22" onclick="ConfirmChange('@item.Id')" />
                        </form>
                    }
                    else
                    {
                        <form asp-action="ChangeStatus" id="ChangeForm-@item.Id" class="d-inline">
                            <input type="hidden" asp-for="Id" value="@item.Id " />
                            <input type="button" value="Avtivate" class="btn btn-danger icon-btn b-r-22" onclick="ConfirmChange('@item.Id')" />
                        </form>
                    }
               

                </td>
            </tr>
        }
    </tbody>
</table>




<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/sweetalert2/sweetalert2.all.js"></script>
<script>



    $(function () {

        var parsedDate = new Date('@DateTime.Now')

        var year = parsedDate.getFullYear();
        var month = String(parsedDate.getMonth() + 1).padStart(2, '0');
        var day = String(parsedDate.getDate()).padStart(2, '0');
        var hours = String(parsedDate.getHours()).padStart(2, '0');
        var minutes = String(parsedDate.getMinutes()).padStart(2, '0');
        var finalDate = `${year}-${month}-${day}T${hours}:${minutes}`

        $("#StartDate").val(finalDate);
        $("#EndDate").val(finalDate);

        // on Change ==> selected option ==> if value ==1 disabled else nothing
        //on checkbox checked
    
        $(".fillBtn").on("click", function () {
            var Id = $(this).data('id')
            var Major = $(this).data('major')
            var Description = $(this).data('description')
            var Place = $(this).data('place')
            var StartDate = $(this).data('startdate')
            var EndDate = $(this).data('enddate')
            var IsExperience = $(this).data('isexperience')
            var IsCurrent = $(this).data('iscurrent')
           
            var parsedDate = new Date(StartDate)
        
            var year = parsedDate.getFullYear();
            var month = String(parsedDate.getMonth() + 1).padStart(2, '0');
            var day = String(parsedDate.getDate()).padStart(2, '0');
            var hours = String(parsedDate.getHours()).padStart(2, '0');
            var minutes = String(parsedDate.getMinutes()).padStart(2, '0');
            var finalDate = `${year}-${month}-${day}T${hours}:${minutes}`

            var parsedDate2 = new Date(EndDate)
 
            var year = parsedDate2.getFullYear();
            var month = String(parsedDate2.getMonth() + 1).padStart(2, '0');
            var day = String(parsedDate2.getDate()).padStart(2, '0');
            var hours = String(parsedDate2.getHours()).padStart(2, '0');
            var minutes = String(parsedDate2.getMinutes()).padStart(2, '0');
            var finalDate2 = `${year}-${month}-${day}T${hours}:${minutes}`

            $("#Id").val(Id);
            $("#Major").val(Major);
            $("#Description").val(Description);
            $("#Place").val(Place);
            $("#StartDate").val(finalDate);
            $("#EndDate").val(finalDate2);
            $("#IsExperience").val(IsExperience);
            $("#IsCurrent").val(IsCurrent);
        })

        /////////////////
        // عند تحميل الصفحة، تحقق مما إذا كان checkbox "IsCurrent" مفعلًا
        if ($("#IsCurrent").prop("checked")) {
            $(".endDatebtn").hide();  // إخفاء تاريخ النهاية إذا كان "IsCurrent" مفعلًا
        }
        // عند تغيير حالة checkbox "IsCurrent"
        $("#IsCurrent").change(function () {
            if ($(this).prop("checked")) {
                // إذا كان checkbox مفعلًا، إخفاء تاريخ النهاية
                $(".endDatebtn").hide();
                $("#EndDate").val(finalDate2);  // مسح القيمة من حقل تاريخ النهاية
            } else {
                // إذا كان checkbox غير مفعل، إظهار تاريخ النهاية
                $(".endDatebtn").show();
            }
        });

    })

    function ConfirmDelete(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $(`#DeleteForm-${id}`).submit()
            }
        });
    }

    function ConfirmChange(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, Change it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $(`#ChangeForm-${id}`).submit()
            }
            else { }
        });
    }


    function ClearForm() {

        $("#Id").val(0);
        $("#Major").val('');
        $("#Description").val('');
        $("#Place").val('');
        $("#StartDate").val('');
        $("#EndDate").val('');
        $("#IsExperience").val(false);
        $("#IsCurrent").val(false);

    }


</script>













